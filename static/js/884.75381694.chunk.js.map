{"version":3,"file":"static/js/884.75381694.chunk.js","mappings":"uKAAO,IAAMA,EAAU,CACrBC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N,8ICkFN,UA/EqB,SAAC,GAAsB,IAAD,IAAnBC,EAAmB,EAAnBA,aACtB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAyB3D,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6FACxBb,GAAa,GADW,kBAGJc,MAAM,sCAAD,OACiBV,EADjB,mBAErBT,EAAAA,GALoB,YAGhBoB,EAHgB,QAOdC,GAPc,uBAQdC,EAAOF,EAAIG,OARG,kBASbD,GATa,aAWhB,IAAIE,MAAM,SAXM,kCAatBC,EAAAA,GAAAA,MAAA,gEAbsB,yBAetBpB,GAAa,GAfS,6EAAH,qDAmBvBa,IAAoBQ,MAAK,SAAAN,GAAG,OAAIZ,EAASY,EAAb,GAC7B,GAAE,CAACX,EAASJ,KAGX,iCACE,SAAC,KAAD,CAAiBsB,GAAId,EAAoBe,QAAzC,SAAkD,0BAGjDrB,IACC,+BACE,iBAAKsB,MAAO,CAAEC,QAAS,OAAQC,IAAK,IAApC,WACE,gBACEC,QAAQ,OACRC,IACE1B,EAAM2B,aAAe3B,EAAM4B,cAA3B,6CAEM5B,EAAM2B,aAAe3B,EAAM4B,eAE7BC,EAENC,IAAK9B,EAAM+B,OAAS/B,EAAMgC,KAC1BC,MAAO,OAET,4BACE,0BACGjC,EAAM+B,OAAS/B,EAAMgC,MACtB,4BAAM,IAAEhC,EAAMkC,aAAaC,UAAU,EAAG,GAAG,WAE7C,wBAAI,cACJ,yBAAInC,EAAMoC,aAAaC,UAAU,UACjC,wBAAI,aACJ,uBACGrC,EAAMsC,OAAOC,QAAO,SAACC,EAAD,UAAmBA,EAAM,IAAzB,EAAQR,IAAR,GAAqC,OAE5D,wBAAI,eACJ,uBAAIhC,EAAMyC,oBAMlB,4BACE,SAAC,KAAD,CAAiBrB,GAAG,OAApB,SAA2B,UAC3B,SAAC,KAAD,CAAiBA,GAAG,UAApB,SAA8B,gBAEhC,SAAC,EAAAsB,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["api/api.js","pages/MovieDetails.jsx"],"sourcesContent":["export const OPTIONS = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OWUzM2Q5ZjIwZjlhNmU0ZTcxNGU2N2FlM2JjZTdhNSIsInN1YiI6IjY0Nzg5ZjI1MDc2Y2U4MDEyOGZiY2NmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fgp-whkIrWAK4eHf9B-LgEQ9c39n98ES3eZ_2XSy_lo',\n  },\n};\n","import { OPTIONS } from 'api/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport NoImg from '../img/no-image.png';\nimport { toast } from 'react-toastify';\nimport { StyledLinkMovie } from 'components/Styled';\n\nconst MovieDetails = ({ setIsLoading }) => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n          OPTIONS\n        );\n        if (res.ok) {\n          const data = res.json();\n          return data;\n        }\n        throw new Error('Opps!');\n      } catch (error) {\n        toast.error(`Oops! Something go wrong please try again later ðŸ˜’`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails().then(res => setMovie(res));\n  }, [movieId, setIsLoading]);\n\n  return (\n    <>\n      <StyledLinkMovie to={backLinkLocationRef.current}>\n        Back to previous page\n      </StyledLinkMovie>\n      {movie && (\n        <>\n          <div style={{ display: 'flex', gap: 20 }}>\n            <img\n              loading=\"lazy\"\n              src={\n                movie.poster_path || movie.backdrop_path\n                  ? `https://image.tmdb.org/t/p/original${\n                      movie.poster_path || movie.backdrop_path\n                    }`\n                  : NoImg\n              }\n              alt={movie.title || movie.name}\n              width={300}\n            />\n            <div>\n              <h2>\n                {movie.title || movie.name}\n                <span>({movie.release_date.substring(0, 4)})</span>\n              </h2>\n              <h4>Raiting:</h4>\n              <p>{movie.vote_average.toFixed()}/10</p>\n              <h4>Genres:</h4>\n              <p>\n                {movie.genres.reduce((acc, { name }) => acc + ' ' + name, '')}\n              </p>\n              <h4>Overview:</h4>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        </>\n      )}\n\n      <nav>\n        <StyledLinkMovie to=\"cast\">Cast</StyledLinkMovie>\n        <StyledLinkMovie to=\"reviews\">Reviews</StyledLinkMovie>\n      </nav>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["OPTIONS","method","headers","accept","Authorization","setIsLoading","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","fetch","res","ok","data","json","Error","toast","then","to","current","style","display","gap","loading","src","poster_path","backdrop_path","NoImg","alt","title","name","width","release_date","substring","vote_average","toFixed","genres","reduce","acc","overview","Suspense"],"sourceRoot":""}