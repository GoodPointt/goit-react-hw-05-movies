{"version":3,"file":"static/js/186.aea857f2.chunk.js","mappings":"uKAAO,IAAMA,EAAU,CACrBC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N,yHC0CN,UA1CgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBP,GAAa,GADW,kBAGJQ,MAAM,sCAAD,OACiBJ,EADjB,kCAErBT,EAAAA,GALoB,YAGhBc,EAHgB,QAOdC,GAPc,yCAQbD,EAAIE,QARS,aAUhB,IAAIC,MAAM,SAVM,kCAYtBC,EAAAA,GAAAA,MAAA,2DAZsB,yBActBb,GAAa,GAdS,6EAAH,qDAkBvBO,IAAoBO,MAAK,SAAAL,GAAG,OAAIN,EAAWM,EAAIM,QAAnB,GAC7B,GAAE,CAACX,EAASJ,KAGX,wBACGE,EAAQc,OAAS,EAChBd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,eAAIC,MAAO,CAAEC,SAAU,GAAIC,UAAW,IAAtC,SAA6CJ,KAC7C,uBAAIC,MAFGF,EADC,KAOZ,uBAAG,2DAIV,C","sources":["api/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const OPTIONS = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OWUzM2Q5ZjIwZjlhNmU0ZTcxNGU2N2FlM2JjZTdhNSIsInN1YiI6IjY0Nzg5ZjI1MDc2Y2U4MDEyOGZiY2NmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fgp-whkIrWAK4eHf9B-LgEQ9c39n98ES3eZ_2XSy_lo',\n  },\n};\n","import { OPTIONS } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Reviews = ({ setIsLoading }) => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n          OPTIONS\n        );\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error('Opps!');\n      } catch (error) {\n        toast.error(`Oops! Somethinig go wrong, try again later ðŸ˜’`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCredits().then(res => setReviews(res.results));\n  }, [movieId, setIsLoading]);\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4 style={{ fontSize: 16, marginTop: 10 }}>{author}</h4>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie ðŸ˜’</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["OPTIONS","method","headers","accept","Authorization","setIsLoading","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieCredits","fetch","res","ok","json","Error","toast","then","results","length","map","id","author","content","style","fontSize","marginTop"],"sourceRoot":""}