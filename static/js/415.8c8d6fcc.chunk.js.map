{"version":3,"file":"static/js/415.8c8d6fcc.chunk.js","mappings":"uKAAO,IAAMA,EAAU,CACrBC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N,8ICsEN,UA/Da,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAyBjB,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBP,GAAa,GADK,kBAGEQ,MAChB,+DACAb,EAAAA,GALc,YAGVc,EAHU,QAORC,GAPQ,iCAQKD,EAAIE,OART,OAQRC,EARQ,OASdT,EAAUS,EAAKC,SATD,8BAWR,IAAIC,MAAM,SAXF,0DAchBC,EAAAA,GAAAA,MAAA,iEAdgB,yBAgBhBf,GAAa,GAhBG,6EAAH,qDAmBjBO,GACD,GAAE,CAACP,KAGF,+BACS,OAANE,QAAM,IAANA,OAAA,EAAAA,EAAQc,QAAS,IAChB,SAAC,KAAD,UACGd,EAAOe,KACN,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,cAAeC,EAAjD,EAAiDA,YAAjD,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAgBC,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAMtB,GAApD,WACE,SAAC,KAAD,CACEuB,QAAQ,OACRC,IACEL,GAAeD,EAAf,6CAEMC,GAAeD,GAEjBO,EAENC,IAAKV,GAASC,EACdU,MAAO,OAET,gBAAKC,UAAU,UAAf,UACE,gBAAIA,UAAU,QAAd,UACGZ,GAASC,EAAK,KAAGY,OAAOd,GAAce,UAAU,EAAG,GAAG,aAhB1ChB,EADvB,OA4BX,C","sources":["api/api.js","pages/Home.jsx"],"sourcesContent":["export const OPTIONS = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OWUzM2Q5ZjIwZjlhNmU0ZTcxNGU2N2FlM2JjZTdhNSIsInN1YiI6IjY0Nzg5ZjI1MDc2Y2U4MDEyOGZiY2NmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fgp-whkIrWAK4eHf9B-LgEQ9c39n98ES3eZ_2XSy_lo',\n  },\n};\n","import { OPTIONS } from 'api/api';\nimport {\n  StyledLinkHome,\n  StyledList,\n  StyledListItem,\n  StyledListItemImg,\n} from 'components/Styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport NoImg from '../img/no-image.png';\n\nconst Home = ({ setIsLoading }) => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(\n          'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n          OPTIONS\n        );\n        if (res.ok) {\n          const data = await res.json();\n          setMovies(data.results);\n        } else {\n          throw new Error('Oops!');\n        }\n      } catch (error) {\n        toast.error(`Oops! something go wrong, please try again later ðŸ˜’`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [setIsLoading]);\n\n  return (\n    <>\n      {movies?.length > 0 && (\n        <StyledList>\n          {movies.map(\n            ({ id, release_date, title, name, backdrop_path, poster_path }) => (\n              <StyledListItem key={id}>\n                <StyledLinkHome to={`/movies/${id}`} state={{ from: location }}>\n                  <StyledListItemImg\n                    loading=\"lazy\"\n                    src={\n                      poster_path || backdrop_path\n                        ? `https://image.tmdb.org/t/p/original${\n                            poster_path || backdrop_path\n                          }`\n                        : NoImg\n                    }\n                    alt={title || name}\n                    width={200}\n                  />\n                  <div className=\"content\">\n                    <h4 className=\"title\">\n                      {title || name} ({String(release_date).substring(0, 4)})\n                    </h4>\n                  </div>\n                </StyledLinkHome>\n              </StyledListItem>\n            )\n          )}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["OPTIONS","method","headers","accept","Authorization","setIsLoading","useState","movies","setMovies","location","useLocation","useEffect","fetchMovies","fetch","res","ok","json","data","results","Error","toast","length","map","id","release_date","title","name","backdrop_path","poster_path","to","state","from","loading","src","NoImg","alt","width","className","String","substring"],"sourceRoot":""}