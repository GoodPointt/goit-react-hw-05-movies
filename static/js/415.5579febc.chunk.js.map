{"version":3,"file":"static/js/415.5579febc.chunk.js","mappings":"uKAAO,IAAMA,EAAU,CACrBC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,8N,oIC4CN,UA3Ca,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAyBjB,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBP,GAAa,GADK,kBAGEQ,MAChB,+DACAb,EAAAA,GALc,YAGVc,EAHU,QAORC,GAPQ,iCAQKD,EAAIE,OART,OAQRC,EARQ,OASdT,EAAUS,EAAKC,SATD,8BAWR,IAAIC,MAAM,SAXF,0DAchBC,EAAAA,GAAAA,MAAA,iEAdgB,yBAgBhBf,GAAa,GAhBG,6EAAH,qDAmBjBO,GACD,GAAE,CAACP,KAGF,wBACGE,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,KAAd,OACV,SAAC,KAAD,CAEEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMlB,GAHjB,UAKE,wBAAKa,GAASE,KAJTD,EAFG,KAWjB,C","sources":["api/api.js","pages/Home.jsx"],"sourcesContent":["export const OPTIONS = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OWUzM2Q5ZjIwZjlhNmU0ZTcxNGU2N2FlM2JjZTdhNSIsInN1YiI6IjY0Nzg5ZjI1MDc2Y2U4MDEyOGZiY2NmMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fgp-whkIrWAK4eHf9B-LgEQ9c39n98ES3eZ_2XSy_lo',\n  },\n};\n","import { OPTIONS } from 'api/api';\nimport { StyledLinkHome } from 'components/Styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Home = ({ setIsLoading }) => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(\n          'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n          OPTIONS\n        );\n        if (res.ok) {\n          const data = await res.json();\n          setMovies(data.results);\n        } else {\n          throw new Error('Oops!');\n        }\n      } catch (error) {\n        toast.error(`Oops! something go wrong, please try again later ðŸ˜’`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [setIsLoading]);\n\n  return (\n    <ul>\n      {movies.map(({ title, id, name }) => (\n        <StyledLinkHome\n          key={id}\n          to={`/movies/${id}`}\n          state={{ from: location }}\n        >\n          <li>{title || name}</li>\n        </StyledLinkHome>\n      ))}\n    </ul>\n  );\n};\n\nexport default Home;\n"],"names":["OPTIONS","method","headers","accept","Authorization","setIsLoading","useState","movies","setMovies","location","useLocation","useEffect","fetchMovies","fetch","res","ok","json","data","results","Error","toast","map","title","id","name","to","state","from"],"sourceRoot":""}